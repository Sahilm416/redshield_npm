{"version":3,"sources":["../../../src/actions/forgotPassword.ts"],"sourcesContent":["\"use server\";\r\n\r\nimport { getEnv } from \"./auth\";\r\n\r\nexport const sendResetPasswordLink = async ({\r\n  email,\r\n  url,\r\n}: {\r\n  email: string;\r\n  url: string;\r\n}) => {\r\n  try {\r\n    const key = await getEnv();\r\n    const res = await fetch(\r\n      \"https://redshield.vercel.app/api/service/resetPassword\",\r\n      {\r\n        method: \"POST\",\r\n        cache: \"no-store\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: key,\r\n        },\r\n        body: JSON.stringify({\r\n          email: email.trim(),\r\n          endpoint: `${url}/ResetPassword`,\r\n        }),\r\n      }\r\n    );\r\n\r\n    const response = (await res.json()) as { status: boolean; message: string };\r\n\r\n    return {\r\n      status: response.status,\r\n      message: response.message,\r\n    };\r\n  } catch (error) {\r\n    console.log(error);\r\n    return {\r\n      status: false,\r\n      message: \"sometghing went wrong\",\r\n    };\r\n  }\r\n};\r\n\r\nexport const checkResetPasswordToken = async ({ token }: { token: string }) => {\r\n  try {\r\n    const key = await getEnv();\r\n    const res = await fetch(\r\n      \"https://redshield.vercel.app/api/service/checkPasswordToken\",\r\n      {\r\n        method: \"POST\",\r\n        cache: \"no-store\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: key,\r\n        },\r\n        body: JSON.stringify({\r\n          token: token,\r\n        }),\r\n      }\r\n    );\r\n\r\n    const response = (await res.json()) as {\r\n      status: boolean;\r\n      message: string;\r\n      data: string;\r\n    };\r\n    return {\r\n      status: response.status,\r\n      message: response.message,\r\n      email: response.data,\r\n      token: token,\r\n    };\r\n  } catch (error) {\r\n    console.log(error);\r\n    return {\r\n      status: false,\r\n      message: \"something went wrong\",\r\n      email: \"\",\r\n      token: \"\",\r\n    };\r\n  }\r\n};\r\n\r\nexport const changePassword = async ({\r\n  password,\r\n  email,\r\n  token,\r\n}: {\r\n  password: string;\r\n  email: string;\r\n  token: string;\r\n}) => {\r\n  try {\r\n    const key = await getEnv();\r\n    const res = await fetch(\r\n      \"https://redshield.vercel.app/api/service/changePassword\",\r\n      {\r\n        method: \"POST\",\r\n        cache: \"no-store\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: key,\r\n        },\r\n        body: JSON.stringify({\r\n          token: token,\r\n          email: email,\r\n          password: password,\r\n        }),\r\n      }\r\n    );\r\n    const response = (await res.json()) as { status: boolean; message: string };\r\n    return {\r\n      status: response.status,\r\n      message: response.message,\r\n    };\r\n  } catch (error) {\r\n    console.log(error);\r\n    return {\r\n      status: false,\r\n      message: \"something went wrong\",\r\n    };\r\n  }\r\n};"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,kBAAuB;AAEhB,MAAM,wBAAwB,OAAO;AAAA,EAC1C;AAAA,EACA;AACF,MAGM;AACJ,MAAI;AACF,UAAM,MAAM,UAAM,oBAAO;AACzB,UAAM,MAAM,MAAM;AAAA,MAChB;AAAA,MACA;AAAA,QACE,QAAQ;AAAA,QACR,OAAO;AAAA,QACP,SAAS;AAAA,UACP,gBAAgB;AAAA,UAChB,eAAe;AAAA,QACjB;AAAA,QACA,MAAM,KAAK,UAAU;AAAA,UACnB,OAAO,MAAM,KAAK;AAAA,UAClB,UAAU,GAAG,GAAG;AAAA,QAClB,CAAC;AAAA,MACH;AAAA,IACF;AAEA,UAAM,WAAY,MAAM,IAAI,KAAK;AAEjC,WAAO;AAAA,MACL,QAAQ,SAAS;AAAA,MACjB,SAAS,SAAS;AAAA,IACpB;AAAA,EACF,SAAS,OAAO;AACd,YAAQ,IAAI,KAAK;AACjB,WAAO;AAAA,MACL,QAAQ;AAAA,MACR,SAAS;AAAA,IACX;AAAA,EACF;AACF;AAEO,MAAM,0BAA0B,OAAO,EAAE,MAAM,MAAyB;AAC7E,MAAI;AACF,UAAM,MAAM,UAAM,oBAAO;AACzB,UAAM,MAAM,MAAM;AAAA,MAChB;AAAA,MACA;AAAA,QACE,QAAQ;AAAA,QACR,OAAO;AAAA,QACP,SAAS;AAAA,UACP,gBAAgB;AAAA,UAChB,eAAe;AAAA,QACjB;AAAA,QACA,MAAM,KAAK,UAAU;AAAA,UACnB;AAAA,QACF,CAAC;AAAA,MACH;AAAA,IACF;AAEA,UAAM,WAAY,MAAM,IAAI,KAAK;AAKjC,WAAO;AAAA,MACL,QAAQ,SAAS;AAAA,MACjB,SAAS,SAAS;AAAA,MAClB,OAAO,SAAS;AAAA,MAChB;AAAA,IACF;AAAA,EACF,SAAS,OAAO;AACd,YAAQ,IAAI,KAAK;AACjB,WAAO;AAAA,MACL,QAAQ;AAAA,MACR,SAAS;AAAA,MACT,OAAO;AAAA,MACP,OAAO;AAAA,IACT;AAAA,EACF;AACF;AAEO,MAAM,iBAAiB,OAAO;AAAA,EACnC;AAAA,EACA;AAAA,EACA;AACF,MAIM;AACJ,MAAI;AACF,UAAM,MAAM,UAAM,oBAAO;AACzB,UAAM,MAAM,MAAM;AAAA,MAChB;AAAA,MACA;AAAA,QACE,QAAQ;AAAA,QACR,OAAO;AAAA,QACP,SAAS;AAAA,UACP,gBAAgB;AAAA,UAChB,eAAe;AAAA,QACjB;AAAA,QACA,MAAM,KAAK,UAAU;AAAA,UACnB;AAAA,UACA;AAAA,UACA;AAAA,QACF,CAAC;AAAA,MACH;AAAA,IACF;AACA,UAAM,WAAY,MAAM,IAAI,KAAK;AACjC,WAAO;AAAA,MACL,QAAQ,SAAS;AAAA,MACjB,SAAS,SAAS;AAAA,IACpB;AAAA,EACF,SAAS,OAAO;AACd,YAAQ,IAAI,KAAK;AACjB,WAAO;AAAA,MACL,QAAQ;AAAA,MACR,SAAS;AAAA,IACX;AAAA,EACF;AACF;","names":[]}