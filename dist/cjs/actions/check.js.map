{"version":3,"sources":["../../../src/actions/check.ts"],"sourcesContent":["export const checkPassword = async (data: { password: string }) => {\r\n    // Check for at least one special character\r\n    if (!/(?=.*[!@#$%^&*])/.test(data.password)) {\r\n      return { status: false, message: \"must contain one special character\" };\r\n    }\r\n  \r\n    //check for special characters\r\n    if (!/(?=.*[0-9])/.test(data.password)) {\r\n      return {\r\n        status: false,\r\n        message: \"Password must contain at least one number.\",\r\n      };\r\n    }\r\n  \r\n    // Check for minimum length of 8 characters\r\n    if (data.password.trim().length < 8) {\r\n      return {\r\n        status: false,\r\n        message: \"Password must be at least 8 characters long.\",\r\n      };\r\n    }\r\n    if (data.password.trim().length > 20) {\r\n      return { status: false, message: \"too long password\" };\r\n    }\r\n    // If all conditions pass, consider the password valid\r\n    return { status: true, message: \"Valid password\" };\r\n  };\r\n  \r\n  "],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAO,MAAM,gBAAgB,OAAO,SAA+B;AAE/D,MAAI,CAAC,mBAAmB,KAAK,KAAK,QAAQ,GAAG;AAC3C,WAAO,EAAE,QAAQ,OAAO,SAAS,qCAAqC;AAAA,EACxE;AAGA,MAAI,CAAC,cAAc,KAAK,KAAK,QAAQ,GAAG;AACtC,WAAO;AAAA,MACL,QAAQ;AAAA,MACR,SAAS;AAAA,IACX;AAAA,EACF;AAGA,MAAI,KAAK,SAAS,KAAK,EAAE,SAAS,GAAG;AACnC,WAAO;AAAA,MACL,QAAQ;AAAA,MACR,SAAS;AAAA,IACX;AAAA,EACF;AACA,MAAI,KAAK,SAAS,KAAK,EAAE,SAAS,IAAI;AACpC,WAAO,EAAE,QAAQ,OAAO,SAAS,oBAAoB;AAAA,EACvD;AAEA,SAAO,EAAE,QAAQ,MAAM,SAAS,iBAAiB;AACnD;","names":[]}